<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Teches on Qingfeng&#39;s blog</title>
    <link>https://lancelqf.github.io/tech/</link>
    <description>Recent content in Teches on Qingfeng&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 04 Mar 2020 11:39:14 -0700</lastBuildDate><atom:link href="https://lancelqf.github.io/tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git</title>
      <link>https://lancelqf.github.io/tech/git/</link>
      <pubDate>Wed, 04 Mar 2020 11:39:14 -0700</pubDate>
      
      <guid>https://lancelqf.github.io/tech/git/</guid>
      <description>Basic setting  Set global user information  git config --global user.name &amp;#34;your name&amp;#34; git config --global user.email &amp;#34;your email&amp;#34;  Set user information for current repository  git config user.name &amp;#34;your name&amp;#34; git config user.email &amp;#34;your email&amp;#34; Start  Create a new repository in current directory:  git init  Create a new repository with some directory:  git init &amp;lt;directory&amp;gt;  Clone an existing repository:  git clone &amp;lt;path to repository&amp;gt;  Add a remote sever:  git remote add origin &amp;lt;server&amp;gt; Add and remove files  Add a file:  git add &amp;lt;file&amp;gt;  Add all files in the working directory:  git add -A  Remove a file from both the staging index:  git rm --cached &amp;lt;file&amp;gt;  Remove a file from both the staging index and the working directory:  git rm &amp;lt;file&amp;gt;  Create a commit:  git commit -m &amp;#34;commit message&amp;#34; Push  Synopsis:  git push &amp;lt;remote server&amp;gt; &amp;lt;local branch&amp;gt;:&amp;lt;remote branch&amp;gt;  Push to the current branch&amp;rsquo;s remote:  git push  Push the current branch to the configured upstream:  git push origin  Push to the master branch:  git push origin master  Push to a branch:  git push origin &amp;lt;branch&amp;gt; Pull  Synopsis:  git pull &amp;lt;remote server&amp;gt; &amp;lt;remote branch&amp;gt;:&amp;lt;local branch&amp;gt;  Pull from the current branch&amp;rsquo;s remote:  git pull  Pull the current branch from the configured upstream:  git pull origin  Pull from master branch:  git pull origin master  Pull from a remote branch:  git pull origin &amp;lt;branch&amp;gt; Branch operations  List local branches:  git branch  List remote branches:  git branch -r  List all (local and remote) branches:  git branch -a  Create a new local branch:  git branch &amp;lt;branch&amp;gt;  Create a new local branch and switch to it:  git checkout -b &amp;lt;branch&amp;gt;  Switch to a local branch:  git checkout &amp;lt;branch&amp;gt;  Rename a local branch:  git branch -m &amp;lt;old branch&amp;gt; &amp;lt;new branch&amp;gt;  Delete a local branch:  git branch -d &amp;lt;branch&amp;gt;  Delete a remote branch:  git push origin --delete &amp;lt;branch&amp;gt;  Merge a branch to the current branch:  git merge &amp;lt;branch&amp;gt; Others  Update .</description>
    </item>
    
    <item>
      <title>Hugo</title>
      <link>https://lancelqf.github.io/tech/hugo/</link>
      <pubDate>Wed, 12 Feb 2020 20:42:30 -0700</pubDate>
      
      <guid>https://lancelqf.github.io/tech/hugo/</guid>
      <description>Add new page $ hugo new new_page.md Build and Preview  Build with drafts  $ hugo server --buildDrafts  Build with selected theme  $ hugo server -t &amp;lt;theme&amp;gt;  Build and watch changes  $ hugo server -w References  Hugo静态网站生成器中文教程 Hugo Doc  </description>
    </item>
    
    <item>
      <title>Slurm</title>
      <link>https://lancelqf.github.io/tech/slurm/</link>
      <pubDate>Sat, 13 Jul 2019 22:21:11 -0600</pubDate>
      
      <guid>https://lancelqf.github.io/tech/slurm/</guid>
      <description>Submit jobs $ sbatch &amp;lt;run_script&amp;gt;.sh Examples of job scripts  Serial job  #!/bin/bash #SBATCH --account=def-afyshe-ab # time (DD-HH:MM:SS) #SBATCH --time=00-00:01:00 echo &amp;#39;Hello, world!&amp;#39; sleep 5  Array job  #!/bin/bash #SBATCH --job-name=test #SBATCH --account=def-afyshe-ab #SBATCH --time=0-01:00:00 #SBATCH --mem-per-cpu=500M # job name (%x), job ID (%j) #SBATCH --output=output/%x-%j.txt # run a 10 job array, with a maximum of 5 running at a time #SBATCH --array=1-10%5 # job array with indexes [1,2,3,5,7] #SBATCH --array=1,2,3,5,7 .</description>
    </item>
    
    <item>
      <title>ssh</title>
      <link>https://lancelqf.github.io/tech/ssh/</link>
      <pubDate>Mon, 10 Jun 2019 12:04:52 -0600</pubDate>
      
      <guid>https://lancelqf.github.io/tech/ssh/</guid>
      <description>Password authentication ssh &amp;lt;User&amp;gt;@&amp;lt;HostName&amp;gt; Configuring key based authentication   Generate a separate SSH key in a different file
ssh-keygen -t rsa -b 4096 -f ~/.ssh/&amp;lt;keyname&amp;gt;   Add the contents of the local &amp;lt;keyname&amp;gt;.pub file to the appropriate authorized_keys file(s) on the SSH host.
# Method 1 ssh-copy-id -i ~/.ssh/&amp;lt;keyname&amp;gt;.pub &amp;lt;User&amp;gt;@&amp;lt;HostName&amp;gt; # Method 2 scp ~/.ssh/&amp;lt;keyname&amp;gt;.pub &amp;lt;User&amp;gt;@&amp;lt;HostName&amp;gt;:~/.ssh/authorized_keys   Open ssh config file and add host information
# Open ssh config vim ~/.</description>
    </item>
    
    <item>
      <title>Singularity</title>
      <link>https://lancelqf.github.io/tech/singularity/</link>
      <pubDate>Sat, 08 Jun 2019 01:24:06 -0600</pubDate>
      
      <guid>https://lancelqf.github.io/tech/singularity/</guid>
      <description>Download pre-built images  # Synopsis $ singularity pull [pull options...] [output file] &amp;lt;container&amp;gt; # From Sylabs cloud library $ singluarity pull library://&amp;lt;user&amp;gt;/&amp;lt;collection&amp;gt;/&amp;lt;container[:tag]&amp;gt; $ singularity pull library://library/default/ubuntu:16.04 # From Docker $ singluarity pull docker://&amp;lt;user&amp;gt;/&amp;lt;image:tag&amp;gt; $ singularity pull docker://ubuntu:16.04 # From Shub $ singluarity pull shub://&amp;lt;user&amp;gt;/&amp;lt;image:tag&amp;gt; $ singularity pull shub://singularityhub/ubuntu:latest # Rename image $ singluarity pull &amp;lt;output file&amp;gt; &amp;lt;container&amp;gt; $ singularity pull explorer.img shub://qlan3/singularity-deffile:explorer  Build a container  # Build from URI $ sudo singularity build &amp;lt;container&amp;gt; &amp;lt;URL&amp;gt; $ sudo singularity build lolcow.</description>
    </item>
    
    <item>
      <title>Parallel</title>
      <link>https://lancelqf.github.io/tech/parallel/</link>
      <pubDate>Fri, 07 Jun 2019 00:04:29 -0600</pubDate>
      
      <guid>https://lancelqf.github.io/tech/parallel/</guid>
      <description> Install  # Install on Ubuntu $ sudo apt-get install parallel # Install by conda $ conda install -c conda-forge parallel  Check how many cores  $ parallel --number-of-cores References  Linux下的并行神器——parallel GNU Parallel Documentation 使用 GNU Parallel 提高 Linux 命令行执行效率 GNU Parallel Tutorial GNU Parallel命令详解 GNU Parallel官网 GNU Parallel cheat sheet GNU Parallel videos  </description>
    </item>
    
    <item>
      <title>Tmux</title>
      <link>https://lancelqf.github.io/tech/tmux/</link>
      <pubDate>Sun, 17 Feb 2019 13:32:44 -0700</pubDate>
      
      <guid>https://lancelqf.github.io/tech/tmux/</guid>
      <description>Commands  Start new named session: tmux new -s [session name] Detach from session: ctrl+b d List sessions: tmux ls Attach to named session: tmux a -t [name of session] Kill named session: tmux kill-session -t [name of session] Split panes horizontally: ctrl+b &amp;ldquo; Split panes vertically: ctrl+b % Kill current pane: ctrl+b x Move to another pane: ctrl+b [arrow key] Kill tmux server, along with all sessions: tmux kill-server  References  Tactical tmux: The 10 Most Important Commands  </description>
    </item>
    
    <item>
      <title>Python入门</title>
      <link>https://lancelqf.github.io/tech/python%E5%85%A5%E9%97%A8/</link>
      <pubDate>Sun, 22 Jul 2018 19:12:41 +0800</pubDate>
      
      <guid>https://lancelqf.github.io/tech/python%E5%85%A5%E9%97%A8/</guid>
      <description>很多非计算机的同学问过我如何学习Python，干脆写份入门指南好了。说来惭愧，其实自己都没有系统学过Python，只是入了个门。基本上都是要用到什么才会去学，很多都是现查现学。高阶的东西完全不会，所以这真的是一份很基础的入门指南。更丰富的内容请自行知乎。
博客式教程  菜鸟：Python基础教程 廖雪峰：Python3教程  网络课程  Coursera：Coursera上有很多Python网课，大部分免费，不过我都没有上过，挑个评分高的学学问题应该都不大。此外，慕课、中国大学MOOC上都有类似的教程。 Codecademy：以“知识点+练习”为主导的学习形式，可以边学边写代码。  书籍  《Python编程入门》by Toby Donaldson：真的是一本超级入门的书，一两天就能看完。如果觉得这本太简单，找本卖得好的Python书学学也可以，都差不太多（其它Python书籍没看过，就不推荐了）。  以上内容其实有很多重复，选一个自己比较能接受的学习形式认认真真学完就好。多写代码有利于巩固，如果是现学现用就更好了。
另外推荐一个很棒的学习网站Learn Anything，虽然目前还在建设中，但是已经有很多有用的东西了。
以上。</description>
    </item>
    
    <item>
      <title>Markdown教程</title>
      <link>https://lancelqf.github.io/tech/markdown%E6%95%99%E7%A8%8B/</link>
      <pubDate>Wed, 27 Jun 2018 11:19:58 +0800</pubDate>
      
      <guid>https://lancelqf.github.io/tech/markdown%E6%95%99%E7%A8%8B/</guid>
      <description>简书居然没有官方 Markdown 教程，我来 原来官方是有的。。。献给写作者的 Markdown 新手指南 不过我这个更简。而且还有独门秘籍。
 首先，“Markdown 其实很简单。在简书上学习 Markdown 最方便。”
 1. 标题 为了获得上面的 “1. 标题”， 在 Markdown 编辑器里输入：
# 1. 标题“#” 后最好加个空格。除此之外，还有 5 级标题，依次有不同的字体大小，即
## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题这样就有：
二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题  2. 加粗，斜体 最常用的强调方式，那就是 加粗 了，你得这样：
最常用的强调方式，那就是 **加粗** 了，你得这样：通常我喜欢在 “**加粗的部分**” 旁边各加一个空格，当然你也可以不这样。 斜体则多用在于书名，比如：我从来没看过 Jane Eyre
斜体则多用在于书名，比如：我从来没看过 *Jane Eyre*但中文的斜体我觉得真是不美，像：《简 · 爱》，一般还是别用了。
 3. 层次 比如写个读书笔记，你得
第一章  第一节   第二节(你不用敲 &amp;ldquo;2&amp;rdquo;，自动就有了）  第一小节（推荐每层次缩进四个空格） * 小小节 1 * 小小节 2 * 第二小节    也不难：</description>
    </item>
    
    <item>
      <title>C Bug</title>
      <link>https://lancelqf.github.io/tech/c-bug/</link>
      <pubDate>Wed, 04 Apr 2018 19:45:55 +0800</pubDate>
      
      <guid>https://lancelqf.github.io/tech/c-bug/</guid>
      <description>  Error: free(): invalid next size (fast/normal) 内存泄漏问题
 可能的原因有：  free了没有分配的内存； 分配了内存忘记释放； 数组循环的时候越界了，写到了其他的内存里面， 然后一free那个区域就出现了这样的问题； strcpy复制出错（应使用strncpy或memcpy）   一个debug的方法：把你怀疑的矩阵（比如释放了就会报内存错误）定义成静态的，这样如果出现越界，会报段错误。然后依次检查是否你的数组真的越界了。 内存调试工具：valgrind    处理与网络相关的数据时，应注意网络字节序和主机字节序的区别。
  </description>
    </item>
    
    <item>
      <title>Linux Bug</title>
      <link>https://lancelqf.github.io/tech/linux-bug/</link>
      <pubDate>Wed, 04 Apr 2018 19:36:44 +0800</pubDate>
      
      <guid>https://lancelqf.github.io/tech/linux-bug/</guid>
      <description> timeout in locking authority file /home/***/.Xauthority  rm -fr .Xauthority-*  E: Could not get lock /var/lib/dpkg/lock - open (11 Resource temporarily unavailable) E: Unable to lock the administration directory (/var/lib/dpkg/) is another process using it  sudo rm /var/cache/apt/archives/lock sudo rm /var/lib/dpkg/lock sudo rm /var/lib/apt/lists/lock </description>
    </item>
    
    <item>
      <title>Python Bug</title>
      <link>https://lancelqf.github.io/tech/python-bug/</link>
      <pubDate>Wed, 04 Apr 2018 19:32:58 +0800</pubDate>
      
      <guid>https://lancelqf.github.io/tech/python-bug/</guid>
      <description>  fatal error: Python.h: No such file or directory：#include &amp;ldquo;Python.h&amp;rdquo;
 Solution: apt-get install python-dev    RuntimeError: dictionary changed size during iteration
 Example: for k in dictVar:dictVar.pop(k) Solution:  Python2.x: for k in dictVar.keys(): dictVar.pop(k) Python3.x: for k in list(dictVar): dictVar.pop(k)      </description>
    </item>
    
  </channel>
</rss>
